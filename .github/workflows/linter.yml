# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  #push:
  #  branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v2.1.0
        with:
          # Optional SDK version(s) to use. If not provided, will install global.json version when available. Examples: 2.2.104, 3.1, 3.1.x
          dotnet-version: 3.1
      - run: dotnet tool install -g dotnet-format
      - name: dotnet-format-action
        # You may pin to the exact commit or the version.
        # uses: jfversluis/dotnet-format@5742daa75ac922cd73c747d7fd31f4279aaf5a24
        uses: jfversluis/dotnet-format@v1.0.9
        with:
          # The GITHUB_TOKEN secret
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          # The primary action `dotnet format` should perform. `check` for only checking, `fix` will also actually fix the formatting errors in the files.
          action: check # optional, default is check
          # Only changed files in the current pull request should be formatted. Only works when the trigger is a pull request.
          #only-changed-files: # optional
          # The job should fail if there's a formatting error.
          fail-fast: true # optional, default is true
          # The solution or project file to operate on. In case you want to process all files in a certain folder, set the root folder here and specify the `workspaceIsFolder` option.
          workspace: dotnet-hello-world.sln # optional
          # Specifies if the value in `workspace` has to be treated as a simple folder. If true, set `workspace` to the root folder you want to process.
          #workspaceIsFolder: true # optional, default is false
          # The files to include, delimited by space. Cannot be used together with the `workspace` option.
          #include: # optional
          # The files to exclude, delimited by space.
          #exclude: # optional
          # Removes whitespaces according to formatting rules.
          fix-whitespace: true # optional
          # Fixes styles from third-party analyzers. More on https://github.com/dotnet/format/blob/main/docs/3rd-party-analyzers.md
          fix-analyzers-level: info # optional
          # Fixes styles according to formating rules.
          fix-style-level: info # optional
          # Sets the logging verbosity of the dotnet format process. Allowed values are q[uiet], m[inimal], n[ormal], d[etailed], and diag[nostic]
          logLevel: d # optional
